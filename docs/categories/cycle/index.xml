<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cycle on BDL教程</title>
    <link>https://bdl.darcyjoven.com/categories/cycle/</link>
    <description>Recent content in cycle on BDL教程</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 20 Jul 2023 08:53:09 +0800</lastBuildDate><atom:link href="https://bdl.darcyjoven.com/categories/cycle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.循环嵌套</title>
      <link>https://bdl.darcyjoven.com/docs/BDL/1.basic/9.over_and_over_again/3.cycle-in-cycle/</link>
      <pubDate>Thu, 20 Jul 2023 08:53:09 +0800</pubDate>
      
      <guid>https://bdl.darcyjoven.com/docs/BDL/1.basic/9.over_and_over_again/3.cycle-in-cycle/</guid>
      <description>循环嵌套#循环结构也支持嵌套，如果把简单的循环内容为“一遍又一遍”，那循环嵌套便可称为“一层又一层，一遍又一遍”。
可以用始终来打比方，走一个代表执行一次循环，那么一小时里，分针又要走60个格，而分针每走一格，秒针也要走60格。
如此，秒针的走动可以看成是内存循环，而分针的走动可看成是外层循环。
嵌套示例#已for循环结构举例，限制想在屏幕上输出4*9个星号，这可以利用双重循环来做：
define i,j integer define s string display &amp;#34;&amp;#34; for i = 1 to 4 let s = &amp;#34;&amp;#34; for j = 1 to 9 let s = s, &amp;#34;* &amp;#34; end for display s end for 输出结果为：
* * * * * * * * ** * * * * * * * ** * * * * * * * ** * * * * * * * * 代码解析</description>
    </item>
    
  </channel>
</rss>
