<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nesting on BDL教程</title>
    <link>https://bdl.darcyjoven.com/categories/nesting/</link>
    <description>Recent content in nesting on BDL教程</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 20 Jul 2023 19:26:32 +0800</lastBuildDate><atom:link href="https://bdl.darcyjoven.com/categories/nesting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.结构体嵌套</title>
      <link>https://bdl.darcyjoven.com/docs/BDL/2.medium/13.struct/3.nesting-record/</link>
      <pubDate>Thu, 20 Jul 2023 19:26:32 +0800</pubDate>
      
      <guid>https://bdl.darcyjoven.com/docs/BDL/2.medium/13.struct/3.nesting-record/</guid>
      <description>结构体嵌套#上一节中讨论的person结构相对简单，只包含了3个数据成员: name、age和email, 如果面对的是更为复杂的结构，将所有数据成员并排似乎不是个高效的方法。那能否使用结构体嵌套，一层层管理数据呢?
结构体嵌套定义#顾名思义，结构体嵌套就是“结构体套结构体”，某个结构体的成员也是一个结构体变量，这样就可以按层次结构合理组织数据，举例如下：
type student record score record math integer, english integer end record, info record height,weight decimal(10,2) end record end record student是个外层结构，内部包含着学生的数据，结构体student内又定义了两个结构体变量score (成绩)和info (基本情况),结构体中的成员应当是占据内存空间的变量实体，因此，score和info是student结构的数据成员，结构体scorestruct和infostruct只是两个类型名，不占据实在的内存地址空间。将上述代码如下改写似乎更好理解一点:
type score record math integer, english integer end record type info record height,weight decimal(10,2) end record type student record score score, info info end record 在结构体内部申明的结构体类型是不可见的，只能通过外部结构体调用。
type student record score record math integer, english integer end record, info record height,weight decimal(10,2) end record end record define zhangsan student 例如以上代码，你只能使用zhangsan.</description>
    </item>
    
  </channel>
</rss>
