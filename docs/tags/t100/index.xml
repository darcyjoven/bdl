<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>t100 on BDL教程</title>
    <link>https://bdl.darcyjoven.com/tags/t100/</link>
    <description>Recent content in t100 on BDL教程</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jul 2023 10:46:50 +0800</lastBuildDate><atom:link href="https://bdl.darcyjoven.com/tags/t100/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2.如何学好BDL语言</title>
      <link>https://bdl.darcyjoven.com/docs/BDL/1.basic/1.before_all/2.how-learn-dbl/</link>
      <pubDate>Mon, 17 Jul 2023 10:46:50 +0800</pubDate>
      
      <guid>https://bdl.darcyjoven.com/docs/BDL/1.basic/1.before_all/2.how-learn-dbl/</guid>
      <description>如何学好BDL语言#无论出于什么目的，一旦下定绝心学习BDL语言，就要端正自信，因为听过BDL用的少，和其它语言差异太多，所以觉得学不好，或者随便学学，是不可取的。只要你掌握一些方法，克服畏惧心理，不轻言放弃，是完全可以学好的。
多动手多求人#所有的问题都可以通过自己编写代码观察结果解决。凡是可以通过编写代码观察到结果的问题，都不应该成为一个问题。不会的，也不要太固执，多问问有经验的人。
多学习优秀代码#BDL相当灵活，即使写的代码不优秀，也可以编译后达到你的运行目标，但是有的代码可以使用更少的代码实现相同功能，或者代码更加具有复用价值。我相信你很容就能找到不错的BDL代码。
多以人类的思考方法来类比计算机#计算机需要什么数据、如何获取这些数据、得到后如何存放、如何处理、处理后如何表现等，对这些问题要多问写为什么，一旦理解了计算机处理这些问题的过程，编程就是一件异常轻松的事情了。
多了解可以直接使用的功能#如果你在使用tiptop gp t100，会有相当多的功能都已经做好成为函数，等待你的调用。请多了解有哪些函数可以使用。</description>
    </item>
    
  </channel>
</rss>
