<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>language on BDL教程</title>
    <link>https://bdl.darcyjoven.com/tags/language/</link>
    <description>Recent content in language on BDL教程</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jul 2023 10:58:17 +0800</lastBuildDate><atom:link href="https://bdl.darcyjoven.com/tags/language/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.语言概述</title>
      <link>https://bdl.darcyjoven.com/docs/BDL/1.basic/1.before_all/3.what-is-language/</link>
      <pubDate>Mon, 17 Jul 2023 10:58:17 +0800</pubDate>
      
      <guid>https://bdl.darcyjoven.com/docs/BDL/1.basic/1.before_all/3.what-is-language/</guid>
      <description>语言概述#提到语言这个词，人们自然想到的是英语、汉语这样的自然语言，因为语言是任何人交互交流信息不可缺少的工具。而今天，计算机遍布了我们生活每一个角落，除了任何人之前的交互交流之外，我们必须和计算机交流。 用什么样的方式和计算机做最直接的交流呢？ 人们自然想到的是最古老也同时也是最方便的方式&amp;ndash;语言。
什么是语言#类比人类的语言，汉语言、英语言、法语言等，可以总结出语言有如下特点。
 语言是用来交流沟通的 语言有独特的语法规则  什么是机器语言#计算机是一个忠实的仆人，时刻等候着主人的命令。 如何才能使计算机听话呢？ 当然是用计算机听得懂的语言去命令它了。 计算的大脑或者说心脏就是CPU，它控制着计算机的运作。 每种CPU都有自己的指令系统。 这个指令系统就是该CPU的机器语言。 机器语言是一组有0和1系列组成的指令码，这些指令码是由CPU制作厂商规定出来的，然后发布出来请程序员遵守。如下是某CPU指定系统的两条指令：
1000000 加1001000 减 要让计算机完成相应的任务，就得用这样的语言去命令它。这样的命令不是一条两条，而是二十上百条。 由于不同型号计算机的指令系统即机器语言是不相同的，按照一种计算机的机器指令编制的程序，不能在另一种计算机上执行。
用机器语言编写程序，编程人员首先要熟悉所用计算机的全部指令代码和代码的含义。
在编写程序时，程序员得自己处理每条指令和每一数据存储分配得输入和输出，还得记住编程过程中每步所使用得工作单元处理处在何种状态，这是一件十分繁琐的工作，编写程序花费的时间往往是实际运行时间的几十倍或者几百倍。
而且，编出的程序全是0和1的指令代码，直观性差，还容易出错。
什么是汇编语言#在用机器语言编程的实践中，一批顽强而聪明的先行者发明了汇编语言&amp;ndash;一门人类可以比较轻松掌握编程语言。 只是这门语言计算机并不认识，人类还不能使用这门语言命令计算机做事情。
所以有一类专门的程序，既认识机器语言，又认识汇编语言，而且还很聪明，知道怎么把汇编语言翻译成机器语言。于是，人类和机器又有了一种新的交流方式，而且任何可以轻松地编写程序了。
 上文提到过，不同CPU有不同指令系统，从而有不同机器语言与其对应。所以程序员用汇编语言编写程序，都要记住是在什么CPU上编写的。 程序员不仅要考虑程序涉及思路，还要熟记计算机的内部结构这种编程的劳动强度依然很大。
 面向过程的语言#汇编语言和机器语言都是面向机器的，机器不同，语言也不同。 既然有办法汇编语言翻译成机器语言，难道就不能把其它更人性化的语言翻译成机器语言？ 1954年，Fortran语言出现了，其后续出现了其它类似语言。这批语言是程序员摆脱了计算机硬件的桎梏，把主要精力放在了程序涉及上，不再关注底层的计算机硬件。 这类语言被称为高级语言。同样得高级语言要被计算机执行，也需要由一个翻译程序将其翻译成机器语言，也就是编译程序。
这类高级语言解决问题的方法是分析出问题所需要的步骤，把程序看作是数据被加工的过程。 基于这类方法涉及的语言称为面向过程语言。C语言就是一种面向过程的程序设计语言。
什么是BDL语言#BDL语言相对于C语言，抽象程序更高，更少的代码可以做更多的事情。 但同样的由于抽象程序高，占用资源也比较高，无法与C语言这样比较底层的语言灵活处理问题，为了解决这个问题，BDL中可以直接调用C语言程序。</description>
    </item>
    
  </channel>
</rss>
